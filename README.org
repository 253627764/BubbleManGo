炸弹人服务器，使用Golang编写。
* 服务器通信模型

  #+BEGIN_SRC graphviz-dot :file frames.png :cmdline -Kdot -Tpng :exports results
    digraph frames {
            edge [style="dashed",arrowhead=empty]
            subgraph cluster_c  {
                    label="clients"
                    bgcolor="mintcream"
                    c1;
                    c2;
                    c3;
                    c4;
            }


            subgraph cluster_servers  {
                    label="servers"
                    bgcolor="cadetblue2"
                    subgraph cluster_a  {
                            label="agents"
                            bgcolor="darkseagreen1"
                            a1;
                            a2;
                            a3;
                            a4;
                    }

                    subgraph cluster_hub  {
                            fontsize=9
                            label="hubs:用来转发消息"
                            bgcolor="aquamarine"

                            h1 [style=box,color=red];
                            h2 [style=box,color=red];
                    }

                    subgraph cluster_room  {
                            label="Rooms"
                            bgcolor="chocolate1"
                            r1;
                            r2;
                            r3;
                            r4;
                    }
            }

            c1 -> a1;
            a1 -> c1;

            c1 -> a2 [style=dotted,color=burlywood];
            c1 -> a3 [style=dotted,color=burlywood];
            c1 -> a4 [style=dotted,color=burlywood];

            a2 -> c1 [style=dotted,color=burlywood];
            a3 -> c1 [style=dotted,color=burlywood];
            a4 -> c1 [style=dotted,color=burlywood];

            c2 -> a2;
            c3 -> a3;
            c4 -> a4;

            h1 -> a1;
            a1 -> h1;

            h1 -> r1;
            r1 -> h1;

    }
  #+END_SRC

  #+RESULTS:
  [[file:frames.png]]

  1) clients:客户端，客户端随机和任何一个agent相连；同一个房间的玩家可以在不同的agents上。
  2) agents:处理客户端连接，玩家数据处理；agents之间互相不可见。
  3) hubs:agents和rooms通信的桥梁；hubs不处理逻辑，无状态，只转发消息。
  4) rooms: 房间，有多个房间节点；rooms之间互相不可见。
